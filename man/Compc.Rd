% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compc.R
\name{Compc}
\alias{Compc}
\alias{cdo_eqc}
\alias{cdo_gec}
\alias{cdo_gtc}
\alias{cdo_lec}
\alias{cdo_ltc}
\alias{cdo_nec}
\title{Comparison of a field with a constant}
\usage{
cdo_eqc(input_file, output_file = NULL)

cdo_gec(input_file, output_file = NULL)

cdo_gtc(input_file, output_file = NULL)

cdo_lec(input_file, output_file = NULL)

cdo_ltc(input_file, output_file = NULL)

cdo_nec(input_file, output_file = NULL)
}
\arguments{
\item{input_file}{input file.}

\item{output_file}{output file.}
}
\description{
This module compares all fields of a dataset with a constant. The resulting
field is a mask containing 1 if the comparison is true and 0 if not. The type
of comparison depends on the chosen operator.
}
\details{
\preformatted{ eqc  Equal constant
                /   1   if i(t,x) EQ c     AND  i(t,x),c NE miss
      o(t,x) = <    0   if i(t,x) NE c     AND  i(t,x),c NE miss
                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss
 nec  Not equal constant
                /   1   if i(t,x) NE c     AND  i(t,x),c NE miss
      o(t,x) = <    0   if i(t,x) EQ c     AND  i(t,x),c NE miss
                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss
 lec  Less equal constant
                /   1   if i(t,x) LE c     AND  i(t,x),c NE miss
      o(t,x) = <    0   if i(t,x) GT c     AND  i(t,x),c NE miss
                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss
 ltc  Less than constant
                /   1   if i(t,x) LT c     AND  i(t,x),c NE miss
      o(t,x) = <    0   if i(t,x) GE c     AND  i(t,x),c NE miss
                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss
 gec  Greater equal constant
                /   1   if i(t,x) GE c     AND  i(t,x),c NE miss
      o(t,x) = <    0   if i(t,x) LT c     AND  i(t,x),c NE miss
                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss
 gtc  Greater than constant
                /   1   if i(t,x) GT c     AND  i(t,x),c NE miss
      o(t,x) = <    0   if i(t,x) LE c     AND  i(t,x),c NE miss
                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss
}
}
