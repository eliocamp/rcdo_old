% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ydrunstat.R
\name{Ydrunstat}
\alias{Ydrunstat}
\alias{cdo_ydrunavg}
\alias{cdo_ydrunmax}
\alias{cdo_ydrunmean}
\alias{cdo_ydrunmin}
\alias{cdo_ydrunstd}
\alias{cdo_ydrunstd1}
\alias{cdo_ydrunsum}
\alias{cdo_ydrunvar}
\alias{cdo_ydrunvar1}
\title{Multi-year daily running statistical values}
\usage{
cdo_ydrunavg(input_file, output_file = NULL)

cdo_ydrunmax(input_file, output_file = NULL)

cdo_ydrunmean(input_file, output_file = NULL)

cdo_ydrunmin(input_file, output_file = NULL)

cdo_ydrunstd(input_file, output_file = NULL)

cdo_ydrunstd1(input_file, output_file = NULL)

cdo_ydrunsum(input_file, output_file = NULL)

cdo_ydrunvar(input_file, output_file = NULL)

cdo_ydrunvar1(input_file, output_file = NULL)
}
\arguments{
\item{input_file}{input file.}

\item{output_file}{output file.}
}
\description{
This module writes running statistical values for each day of year in infile to
outfile. Depending on the chosen operator, the minimum, maximum, sum, average,
variance or standard deviation of all timesteps in running windows of which the
medium timestep corresponds to a certain day of year is computed. The date
information in an output field is the date of the timestep in the middle of the
last contributing running window. Note that the operator have to be applied to
a continuous time series of daily measurements in order to yield physically
meaningful results. Also note that the output time series begins (nts-1)/2
timesteps after the first timestep of the input time series and ends (nts-1)/2
timesteps before the last one. For input data which are complete but not
continuous, such as time series of daily measurements for the same month or
season within different years, the operator yields physically meaningful
results only if the input time series does include the (nts-1)/2 days before
and after each period of interest.
}
\details{
\preformatted{ ydrunmin   Multi-year daily running minimum
            o(001,x) = min\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day[(i(t+(nts-1)/2)] = 001\}
}
}
